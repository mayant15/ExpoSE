(declare-fun str.isWhite (String) Bool)
(declare-fun X () String)
(define-funs-rec ( ( str.repeat ((x!1 String) (x!2 Int)) String)
                   ( str.whiteLeft ((x!1 String) (x!2 Int)) Int)
                   ( str.whiteRight ((x!1 String) (x!2 Int)) Int))
                 ( (ite (<= x!2 0)
                        ""
                        (str.++ x!1 ((_ str.repeat 0) x!1 (- x!2 1))))
                   (ite (= (str.at x!1 x!2) " ")
                        ((_ str.whiteLeft 0) x!1 (+ x!2 1))
                        x!2)
                   (ite (= (str.at x!1 x!2) " ")
                        ((_ str.whiteRight 0) x!1 (- x!2 1))
                        x!2)))
(assert (not (= "" X)))
(assert (>= (to_real (str.len X)) 2.0))
(assert (not (<= (to_real (str.len X)) 0.0)))
(assert (= (str.at X 0) (seq.unit #x22)))
(assert (= (str.at X (+ (- 1) (str.len X))) (seq.unit #x22)))
(assert (not (<= (str.len X) 1)))
(assert (let ((a!1 (+ (- 1.0) (* 2.0 (to_real (str.len X))))))
(let ((a!2 (ite (>= (to_real (str.len X)) 1.0)
                (+ (- 1.0) (to_real (str.len X)))
                a!1)))
  (>= a!2 2.0))))
(model-add str.isWhite ((x!1 String)) Bool (= x!1 " "))
